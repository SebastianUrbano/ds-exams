# -- mode: ruby --
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|

  config.vm.define "lb" do |lb|
      lb.vm.box = "centos/7"
      lb.vm.hostname = "lb"
      lb.vm.network "private_network", ip: "192.168.33.200"
      lb.vm.provider "virtualbox" do |vb|
       vb.customize ["modifyvm", :id, "--memory", "512", "--cpus", "1", "--name", "lb"]
      end

      # CAMBIAR POR LO DE SALTSTACK 
      #lb.vm.provision "ansible" do |ansible|
      # ansible.playbook = "playbooks/haproxy/loadbalancer.yml"
      #  ansible.extra_vars = {
      #     "web_servers" => [
      #     {"name": "web-1","ip":"192.168.33.11"},
      #      {"name": "web-2","ip":"192.168.33.12"}
      #     ] 
      #  }
       
      #end  
    end
  
    # config.ssh.insert_key = false
    # (1..1).each do |i|
    #  config.vm.define "front-#{i}" do |front|
    #   front.vm.box = "generic/ubuntu1804"
    #   front.vm.hostname = "front-#{i}"
    #   front.vm.network "private_network", ip: "192.168.33.1#{i}"
    #   front.vm.provider "virtualbox" do |vb|
    #     vb.customize ["modifyvm", :id, "--memory", "512", "--cpus", "1", "--name", "front-#{i}"]
    #    end
    #    front.vm.provision "shell", inline: "sudo apt-get update"
    #    front.vm.provision "shell", inline: "sudo curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -"
    #    front.vm.provision "shell", inline: "sudo apt-get install -y nodejs"
    #    #si no funciona, reemplazar lo de arriba por       front.vm.provision "shell", inline: "sudo apt-get install -y nodejs"
    #    front.vm.provision "shell", inline: "sudo apt-get install npm --yes"
    #    front.vm.provision "shell", inline: "sudo npm install -g create-react-app --yes"
    #    front.vm.provision "shell", inline: "sudo create-react-app appprueba"
    #    front.vm.provision "shell", inline: "cd appprueba"    
    #    front.vm.provision "shell", inline: "npm start" 
    #    #CAMBIAR ESTO A SALTSTACK
    #    #web.vm.provision "ansible" do |ansible|
    #    # ansible.playbook = "playbooks/httpd/webserver.yml"
    #    # ansible.groups = {
    #    #   "webservers" => ["web-#{i}"]
    #    #}
    #    #  end
    # end
  #  end
  

    config.vm.define "front" do |front|
     front.vm.box = "generic/ubuntu1804"
     front.vm.hostname = "front"
     front.vm.network "forwarded_port", guest: 8080, host: 8080
     front.vm.provision "shell", inline: "sudo apt-get update"
     front.vm.provision "shell", inline: "sudo curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -"
     front.vm.provision "shell", inline: "sudo apt-get install -y nodejs"
     #si no funciona, reemplazar lo de arriba por       front.vm.provision "shell", inline: "sudo apt-get install -y nodejs"

     front.vm.provision "shell", inline: "sudo npm install -g create-react-app --yes"
     front.vm.provision "shell", inline: "sudo create-react-app appprueba"
     front.vm.provision "shell", inline: "cd appprueba"    
     front.vm.provision "shell", inline: "npm start" 
    end

    # config.vm.define "db" do |db|
    #  db.vm.box = "centos/7"
    #  db.vm.hostname = "db"
    #  db.vm.network "private_network", ip: "192.168.33.100"
    #  db.vm.provision "shell", inline: "echo Iam DB server"

    #  #APROVISIONAR LA BASE DE DATOS
    # end
  end
