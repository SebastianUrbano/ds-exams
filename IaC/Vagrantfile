# -- mode: ruby --
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  
<<<<<<< HEAD
  config.ssh.insert_key = false
  (1..2).each do |i|
   config.vm.define "web-#{i}" do |web|
     web.vm.box = "centos/7"
     web.vm.hostname = "web-#{i}"
     web.vm.network "private_network", ip: "192.168.33.1#{i}"
     web.vm.provider "virtualbox" do |vb|
      vb.customize ["modifyvm", :id, "--memory", "512", "--cpus", "1", "--name", "web-#{i}"]
     end
    #  web.vm.provision "file", source: "./Scripts/web.sh", destination: "/srv/sc.sh"
    
    ####### File Share #######
    config.vm.synced_folder '../ConfigurationManagment/states', '/srv/salt'
    config.vm.synced_folder '../ConfigurationManagment/pillars', '/srv/pillar'  
    config.vm.synced_folder './Scripts', '/srv/Scripts' 
    ##### APROVISIONAR INICIAL DE LOS SERVIDORES #####  
    config.vm.provision "shell", path: "./Scripts/web.sh"
    ##### APROVISIONAMIENTO DE LOS SERVIDORES ##### 
    config.vm.provision :salt do |salt|
      salt.masterless = true
      salt.run_highstate = true
      salt.verbose = true
=======
    config.ssh.insert_key = false
    (1..2).each do |i|
     config.vm.define "web-#{i}" do |web|
       web.vm.box = "centos/7"
       web.vm.hostname = "web-#{i}"
       web.vm.network "private_network", ip: "192.168.33.1#{i}"
       web.vm.provider "virtualbox" do |vb|
        vb.customize ["modifyvm", :id, "--memory", "512", "--cpus", "1", "--name", "web-#{i}"]
       end
      #  web.vm.provision "file", source: "./Scripts/web.sh", destination: "/srv/sc.sh"
      
      ####### File Share #######
      config.vm.synced_folder '../ConfigurationManagment/states', '/srv/salt'
      config.vm.synced_folder '../ConfigurationManagment/pillars', '/srv/pillar'  
      config.vm.synced_folder './Scripts', '/srv/Scripts' 
      ##### APROVISIONAR INICIAL DE LOS SERVIDORES #####  
      web.vm.provision "shell",
      inline: "cd /srv/Scripts && chmod 777 web.sh && ./web.sh", run: 'always'
      ##### APROVISIONAMIENTO DE LOS SERVIDORES ##### 
      config.vm.provision :salt do |salt|
        salt.masterless = true
        salt.run_highstate = true
        salt.verbose = true
      end
>>>>>>> 9a06e706b900018a12003ad3adaac440442ae1b8
    end
  end
 end
  config.vm.define "lb" do |lb|
   lb.vm.box = "centos/7"
   lb.vm.hostname = "lb"
   lb.vm.network "private_network", ip: "192.168.33.200"
   lb.vm.provider "virtualbox" do |vb|
    vb.customize ["modifyvm", :id, "--memory", "512", "--cpus", "1", "--name", "lb"]
   end
<<<<<<< HEAD
  ####### File Share #######
  config.vm.synced_folder '../ConfigurationManagment/states', '/srv/salt'
  config.vm.synced_folder '../ConfigurationManagment/pillars', '/srv/pillar'  
  config.vm.synced_folder './Scripts', '/srv/Scripts' 
  ##### APROVISIONAR INICIAL DEL LB #####  
  config.vm.provision "shell", path: "./Scripts/lb.sh"
  ##### APROVISIONAMIENTO DEL LB##### 
  config.vm.provision :salt do |salt|
    salt.masterless = true
    salt.run_highstate = true
    salt.verbose = true
  end
end

#    lb.vm.provision "shell", inline: "ls -lh /sbin/mount.vboxsf && sudo ln -sf /opt/VBoxGuestAdditions-*/lib/VBoxGuestAdditions/mount.vboxsf /sbin/mount.vboxsf"
#  end
  config.vm.define "db" do |db|
   db.vm.box = "centos/7"
   db.vm.hostname = "db"
   db.vm.network "private_network", ip: "192.168.33.14"
   db.vm.provider "virtualbox" do |vb|
    vb.customize ["modifyvm", :id, "--memory", "512", "--cpus", "1", "--name", "db"]
   end
    ####### File Share #######
   config.vm.synced_folder '../ConfigurationManagment/states', '/srv/salt'
   config.vm.synced_folder '../ConfigurationManagment/pillars', '/srv/pillar'  
   config.vm.synced_folder './Scripts', '/srv/Scripts' 
   ##### APROVISIONAR INICIALMENTE LA BASE DE DATOS ##### 
   config.vm.provision "shell", path: "./Scripts/db.sh"
    ##### APROVISIONAMIENTO DE LA BASE DE DATOS ##### 
=======
    config.vm.define "lb" do |lb|
     lb.vm.box = "centos/7"
     lb.vm.hostname = "lb"
     lb.vm.network "private_network", ip: "192.168.33.200"
     lb.vm.provider "virtualbox" do |vb|
      vb.customize ["modifyvm", :id, "--memory", "512", "--cpus", "1", "--name", "lb"]
     end
    ####### File Share #######
    config.vm.synced_folder '../ConfigurationManagment/states', '/srv/salt'
    config.vm.synced_folder '../ConfigurationManagment/pillars', '/srv/pillar'  
    config.vm.synced_folder './Scripts', '/srv/Scripts' 
    ##### APROVISIONAR INICIAL DE LOS SERVIDORES #####  
    config.vm.provision "shell",
     inline: "cd /srv/Scripts && chmod 777 lb.sh && ./lb.sh", run: 'always'
    ##### APROVISIONAMIENTO DE LOS SERVIDORES ##### 
>>>>>>> 9a06e706b900018a12003ad3adaac440442ae1b8
    config.vm.provision :salt do |salt|
      salt.masterless = true
      salt.run_highstate = true
      salt.verbose = true
<<<<<<< HEAD
    end
    db.vm.provision "shell", inline: "echo Iam DB server"
  end
=======
    end
  end
  
  #    lb.vm.provision "shell", inline: "ls -lh /sbin/mount.vboxsf && sudo ln -sf /opt/VBoxGuestAdditions-*/lib/VBoxGuestAdditions/mount.vboxsf /sbin/mount.vboxsf"
  #  end
    config.vm.define "db" do |db|
     db.vm.box = "centos/7"
     db.vm.hostname = "db"
     db.vm.network "private_network", ip: "192.168.33.14"
     db.vm.provider "virtualbox" do |vb|
      vb.customize ["modifyvm", :id, "--memory", "512", "--cpus", "1", "--name", "db"]
     end
      ####### File Share #######
     config.vm.synced_folder '../ConfigurationManagment/states', '/srv/salt'
     config.vm.synced_folder '../ConfigurationManagment/pillars', '/srv/pillar'  
     config.vm.synced_folder './Scripts', '/srv/Scripts' 
     ##### APROVISIONAR INICIALMENTE LA BASE DE DATOS ##### 
     config.vm.provision "shell",
      inline: "cd /srv/Scripts && chmod 777 db.sh && ./db.sh", run: 'always'     
      ##### APROVISIONAMIENTO DE LA BASE DE DATOS ##### 
      config.vm.provision :salt do |salt|
        salt.masterless = true
        salt.run_highstate = true
        salt.verbose = true
      end
      db.vm.provision "shell", inline: "echo Iam DB server"
    end
>>>>>>> 9a06e706b900018a12003ad3adaac440442ae1b8
end
